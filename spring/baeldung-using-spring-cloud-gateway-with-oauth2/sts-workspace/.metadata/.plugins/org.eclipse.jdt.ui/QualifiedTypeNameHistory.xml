<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthentication"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="com.gusrubin.quotes.quotesresource.domain.Quote"/>
    <fullyQualifiedTypeName name="com.gusrubin.quotes.quotesresource.domain.QuoteService"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.core.annotation.Order"/>
    <fullyQualifiedTypeName name="org.springframework.core.Ordered"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.OAuth2AuthorizationServerConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.Customizer"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.authorization.client.RegisteredClientRepository"/>
    <fullyQualifiedTypeName name="org.springframework.jdbc.core.JdbcTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.authorization.client.RegisteredClient"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.ClientAuthenticationMethod"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.AuthorizationGrantType"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.core.oidc.OidcScopes"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.authorization.config.ClientSettings"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.authorization.client.JdbcRegisteredClientRepository"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationService"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.authorization.JdbcOAuth2AuthorizationService"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationConsentService"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.authorization.JdbcOAuth2AuthorizationConsentService"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.source.JWKSource"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.proc.SecurityContext"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.JWKSet"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.server.authorization.config.ProviderSettings"/>
    <fullyQualifiedTypeName name="org.springframework.jdbc.datasource.embedded.EmbeddedDatabase"/>
    <fullyQualifiedTypeName name="org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="org.springframework.security.provisioning.InMemoryUserDetailsManager"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.RSAKey"/>
    <fullyQualifiedTypeName name="java.security.interfaces.RSAPublicKey"/>
    <fullyQualifiedTypeName name="java.security.interfaces.RSAPrivateKey"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.ECKey"/>
    <fullyQualifiedTypeName name="java.security.interfaces.ECPublicKey"/>
    <fullyQualifiedTypeName name="java.security.interfaces.ECPrivateKey"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.Curve"/>
    <fullyQualifiedTypeName name="java.util.UUID"/>
    <fullyQualifiedTypeName name="com.nimbusds.jose.jwk.OctetSequenceKey"/>
    <fullyQualifiedTypeName name="javax.crypto.SecretKey"/>
    <fullyQualifiedTypeName name="javax.crypto.KeyGenerator"/>
    <fullyQualifiedTypeName name="java.security.KeyPair"/>
    <fullyQualifiedTypeName name="java.security.KeyPairGenerator"/>
    <fullyQualifiedTypeName name="java.security.spec.EllipticCurve"/>
    <fullyQualifiedTypeName name="java.security.spec.ECFieldFp"/>
    <fullyQualifiedTypeName name="java.math.BigInteger"/>
    <fullyQualifiedTypeName name="java.security.spec.ECPoint"/>
    <fullyQualifiedTypeName name="java.security.spec.ECParameterSpec"/>
    <fullyQualifiedTypeName name="com.example.defaultauthorizationserver.jose.Jwks"/>
</qualifiedTypeNameHistroy>
